MVC 패턴 : 디자인 패턴 중 하나
( 디자인 패턴 : 프로그램 개발 중 발생할 수 있는 문제점들을 정리하여 상황에 따라 사용할 수 있도록 특정한 규약을 통해 만들어놓은 것. )

M odel		: 데이터, 데이터를 처리하는 곳
V  iew		: 화면 디자인, 결과를 출력하는 곳
C  ontroller	: 웹의 요청(request, response 등)을 처리하는 곳
		: view와 model이 소통하는 중간역할

 - MVC1 패턴 : JSP파일에서 Controller 기능과 View 기능을 모두 처리
	장점 : 개발 속도가 빠름 / 배우기 쉬움
	단점 : 코드의 구분이 명확하지 않음 / 프론트엔드와 백엔드가 섞여있음 / 유지보수와 디버깅이 어려움
	=> 적은 인력으로 간단한 프로젝트를 진행할 때 적합

 - MVC2 패턴 : MVC1의 JSP에서 자바 코드들만 Controller 역할의 서블릿으로 분리
	장점 : 프론트엔드와 백엔드가 분리됨 / 유지보수가 용이함 / 코드가 비교적 간결해짐
	단점 : 구조가 복잡함 / 하나의 서블릿으로 컨트롤러를 구현하게 되면 모든 요청을 하나의 서블릿이 처리하게 되므로 로직이 복잡해지고 결국 유지보수가 어려워지게 됨
	=> 규모가 큰 프로젝트에 적합함

 - MVC 프레임 워크(Spring)